name: laravel-build
on:
  push:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install --no-dev --no-interaction --prefer-dist

      - name: Install npm dependencies
        run: npm install --omit=dev

      - name: Build assets
        run: npm run build

      - name: Archive application
        run: tar -czf app.tgz ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-archive
          path: app.tgz

      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ${{ secrets.SSH_DIR }}
            scp -P ${{ secrets.SSH_PORT }} -i ${{ secrets.SSH_PRIVATE_KEY }} app.tgz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_DIR }}
            cd ${{ secrets.SSH_DIR }}
            tar -xzf app.tgz
            composer install --optimize-autoloader --no-dev
            npm install --production
            cp env.example .env
            sed -i "s/DB_CONNECTION=.*/DB_CONNECTION=${{ secrets.DB_CONNECTION }}/" .env
            sed -i "s/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/" .env
            sed -i "s/DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/" .env
            sed -i "s/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
            sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/" .env
            sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env
            mysql -u ${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} -e "DROP DATABASE IF EXISTS ${{ secrets.DB_DATABASE }}; CREATE DATABASE ${{ secrets.DB_DATABASE }};"
            php artisan migrate --force
            php artisan db:seed --force
            php artisan config:cache
            php artisan key:generate --force
            php artisan config:cache
            mkdir -p storage/framework/views
            chmod -R 775 storage
            chown -R www-data:www-data storage
            mkdir -p bootstrap/cache
            chmod -R 775 bootstrap/cache
            chown -R www-data:www-data bootstrap/cache
            php artisan optimize:clear
            screen -S yokse_bot -X quit || true
            screen -dmS yokse_bot node discord/index.js
